<?xml version='1.0' encoding='utf-8'?>
<testsuites><testsuite name="pytest" errors="0" failures="0" skipped="0" tests="16" time="0" timestamp="2025-03-23T17:14:17.305500" hostname="1a2818a7c1e2"><testcase classname="test_detr" name="tests/models/detr/test_detr.py::test_detr[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:14:17.305303+00:00" /><property name="model_name" value="DETR" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'DETR', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="end_timestamp" value="2025-03-23T17:16:32.168495+00:00" /><property name="tags" value="{'model_name': 'DETR', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_distilbert" name="tests/models/distilbert/test_distilbert.py::test_distilbert_multiloop[full-distilbert-base-uncased-eval-64]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:17:30.162439+00:00" /><property name="model_name" value="distilbert-base-uncased" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'distilbert-base-uncased', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="tags" value="{'model_name': 'distilbert-base-uncased', 'frontend': 'tt-torch', 'avg_pccs': -1, 'min_pccs': -1, 'max_pccs': -1, 'avg_atols': -1, 'min_atols': -1, 'max_atols': -1, 'pcc': -1, 'atol': -1, 'bringup_status': 'INCORRECT_RESULT', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /><property name="end_timestamp" value="2025-03-23T17:19:03.882833+00:00" /></properties></testcase><testcase classname="test_falcon" name="tests/models/falcon/test_falcon.py::test_falcon[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:20:10.354887+00:00" /><property name="model_name" value="Falcon" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'Falcon', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="end_timestamp" value="2025-03-23T17:21:24.068085+00:00" /><property name="tags" value="{'model_name': 'Falcon', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'STABLEHLO', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_dpr" name="tests/models/dpr/test_dpr.py::test_dpr[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:19:09.923792+00:00" /><property name="model_name" value="DPR" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'DPR', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="achieved_compile_depth" value="EXECUTE" /><property name="tags" value="{'model_name': 'DPR', 'frontend': 'tt-torch', 'pccs': [0.2287180292718455, 0.1261122937061109, None], 'atols': [11.0, 11.875, 2.5625], 'avg_pccs': 0.1774151614889782, 'min_pccs': 0.1261122937061109, 'max_pccs': 0.2287180292718455, 'avg_atols': 8.479166666666666, 'min_atols': 2.5625, 'max_atols': 11.875, 'pcc': 0.1261122937061109, 'atol': 11.875, 'bringup_status': 'INCORRECT_RESULT', 'max_achieved_compile_depth': 'EXECUTE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /><property name="end_timestamp" value="2025-03-23T17:20:05.055616+00:00" /></properties></testcase><testcase classname="test_clip" name="tests/models/clip/test_clip.py::test_clip[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:08:19.065127+00:00" /><property name="model_name" value="CLIP" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'CLIP', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="end_timestamp" value="2025-03-23T17:08:42.349933+00:00" /><property name="tags" value="{'model_name': 'CLIP', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'STABLEHLO', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_deit" name="tests/models/deit/test_deit.py::test_deit[full-facebook/deit-base-patch16-224-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:13:49.501669+00:00" /><property name="model_name" value="facebook/deit-base-patch16-224" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'facebook/deit-base-patch16-224', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="end_timestamp" value="2025-03-23T17:14:12.752669+00:00" /><property name="tags" value="{'model_name': 'facebook/deit-base-patch16-224', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_gpt2" name="tests/models/gpt2/test_gpt2.py::test_gpt2[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:30:55.035847+00:00" /><property name="model_name" value="GPT-2" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'GPT-2', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="end_timestamp" value="2025-03-23T17:31:08.280089+00:00" /><property name="tags" value="{'model_name': 'GPT-2', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'STABLEHLO', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_hardnet" name="tests/models/hardnet/test_hardnet.py::test_hardnet[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:43:51.296998+00:00" /><property name="model_name" value="HardNet" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'HardNet', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="achieved_compile_depth" value="EXECUTE" /><property name="end_timestamp" value="2025-03-23T17:46:42.768293+00:00" /><property name="tags" value="{'model_name': 'HardNet', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'EXECUTE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_deepseek_qwen" name="tests/models/deepseek/test_deepseek_qwen.py::test_deepseek_qwen[full-deepseek-ai/DeepSeek-R1-Distill-Qwen-32B-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:09:01.762429+00:00" /><property name="model_name" value="deepseek-ai/DeepSeek-R1-Distill-Qwen-32B" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'deepseek-ai/DeepSeek-R1-Distill-Qwen-32B', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': False, '_consteval_parameters': False, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="end_timestamp" value="2025-03-23T17:13:39.463165+00:00" /><property name="tags" value="{'model_name': 'deepseek-ai/DeepSeek-R1-Distill-Qwen-32B', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_distilbert" name="tests/models/distilbert/test_distilbert.py::test_distilbert[full-distilbert-base-uncased-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:16:38.166572+00:00" /><property name="model_name" value="distilbert-base-uncased" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'distilbert-base-uncased', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="achieved_compile_depth" value="EXECUTE" /><property name="tags" value="{'model_name': 'distilbert-base-uncased', 'frontend': 'tt-torch', 'pccs': [0.5157130100075521], 'atols': [3.78125], 'avg_pccs': 0.5157130100075521, 'min_pccs': 0.5157130100075521, 'max_pccs': 0.5157130100075521, 'avg_atols': 3.78125, 'min_atols': 3.78125, 'max_atols': 3.78125, 'pcc': 0.5157130100075521, 'atol': 3.78125, 'bringup_status': 'INCORRECT_RESULT', 'max_achieved_compile_depth': 'EXECUTE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /><property name="end_timestamp" value="2025-03-23T17:17:24.790206+00:00" /></properties></testcase><testcase classname="test_codegen" name="tests/models/codegen/test_codegen.py::test_codegen[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:08:48.749000+00:00" /><property name="model_name" value="codegen" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'codegen', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': False, '_consteval_parameters': False, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="end_timestamp" value="2025-03-23T17:08:55.948627+00:00" /><property name="tags" value="{'model_name': 'codegen', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_glpn_kitti" name="tests/models/glpn_kitti/test_glpn_kitti.py::test_glpn_kitti[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:24:31.834255+00:00" /><property name="model_name" value="GLPN-KITTI" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'GLPN-KITTI', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="end_timestamp" value="2025-03-23T17:30:48.722917+00:00" /><property name="tags" value="{'model_name': 'GLPN-KITTI', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'TTNN_IR', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_bert" name="tests/models/bert/test_bert.py::test_bert[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:05:23.736438+00:00" /><property name="model_name" value="BERT" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'BERT', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="achieved_compile_depth" value="EXECUTE" /><property name="end_timestamp" value="2025-03-23T17:06:44.346074+00:00" /><property name="tags" value="{'model_name': 'BERT', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'EXECUTE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_flan_t5" name="tests/models/flan_t5/test_flan_t5.py::test_flan_t5[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:21:33.303976+00:00" /><property name="model_name" value="FLAN-T5" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'FLAN-T5', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="end_timestamp" value="2025-03-23T17:24:23.135439+00:00" /><property name="tags" value="{'model_name': 'FLAN-T5', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'FAILED_FE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_gpt_neo" name="tests/models/gpt_neo/test_gpt_neo.py::test_gpt_neo[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:31:14.045991+00:00" /><property name="model_name" value="GPTNeo" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'GPTNeo', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="tags" value="{'model_name': 'GPTNeo', 'frontend': 'tt-torch', 'max_achieved_compile_depth': 'FAILED_FE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /></properties></testcase><testcase classname="test_bloom" name="tests/models/bloom/test_bloom.py::test_bloom[full-eval]" time="0"><properties><property name="start_timestamp" value="2025-03-23T17:06:50.152479+00:00" /><property name="model_name" value="Bloom" /><property name="frontend" value="tt-torch" /><property name="owner" value="tt-torch" /><property name="group" value="generality" /><property name="config" value="{'compiler_config': {'compile_depth': 'CompileDepth.EXECUTE', 'profile_ops': True, 'torch_mlir_module': None, 'stablehlo_mlir_module': None, 'unique_ops': {}, 'stable_hlo_ops': [], 'model_name': 'Bloom', 'results_path': 'results/models/', 'single_op_timeout': 30, 'enable_consteval': True, '_consteval_parameters': True, '_enable_intermediate_verification': False, '_verify_op_by_op': False}}" /><property name="achieved_compile_depth" value="STABLEHLO" /><property name="achieved_compile_depth" value="TTNN_IR" /><property name="achieved_compile_depth" value="EXECUTE" /><property name="tags" value="{'model_name': 'Bloom', 'frontend': 'tt-torch', 'pccs': [0.01726354185716227, 0.35976390549070003, 0.32019687208560943, 0.04624957272129163, 0.08749547084446817, 0.14167763794105304, -0.05678791793496232, 0.0901208035290668, -0.04189330096978994, 0.04994141056244727, -0.10130972898591559, 0.21376181543524772, -0.02683509796583591, 0.1388008191138678, 0.004272173794856368, 0.0016636961975693143, -0.005249475193838202, 0.040095352876732354, -0.007465883875367316, -0.025132390799238454, 0.002395936350441339, -0.018375656720501028, 0.004210803687482163, -0.021622567820440048, 0.004441613840721642, -0.03827863222533612, 0.007619909809744511, -0.052896319582641696, 0.0051196496506042116, -0.06400677995052897, 0.003529906789006662, -0.017230290741216715, 0.009360194812061627, -0.08046851276658783, -0.000871079514496957, 0.0002152425904197049, 0.004611729075675675, -0.04911154981102607, 0.0038962082590593746, -0.03620810137760923, 0.003753190514235459, -0.05955633840852305, 0.010417758223812799, -0.123693960039572, -0.04054261643330051, -0.0984360239677164, 0.05694456137542545, -0.06901537532785333, -0.06966717680689423], 'atols': [211968.0, 127.5, 107.0, 49920.0, 43264.0, 69120.0, 37120.0, 101376.0, 53760.0, 95744.0, 66048.0, 130048.0, 65024.0, 131072.0, 81408.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0, 131072.0], 'avg_pccs': 0.010676836738970831, 'min_pccs': -0.123693960039572, 'max_pccs': 0.35976390549070003, 'avg_atols': 114133.76530612246, 'min_atols': 107.0, 'max_atols': 211968.0, 'pcc': -0.123693960039572, 'atol': 211968.0, 'bringup_status': 'INCORRECT_RESULT', 'max_achieved_compile_depth': 'EXECUTE', 'crashsafe': 'This XML file was generated by the crashsafe XML writer (tt-torch gh issue #443). Test time and passing status may be inaccurate.'}" /><property name="end_timestamp" value="2025-03-23T17:08:12.403013+00:00" /></properties></testcase></testsuite></testsuites>
