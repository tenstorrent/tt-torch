# SPDX-FileCopyrightText: Â© 2024 Tenstorrent AI ULC
#
# SPDX-License-Identifier: Apache-2.0
#

if [ -z "$TTMLIR_TOOLCHAIN_DIR" ]; then
  echo "TTMLIR_TOOLCHAIN_DIR not set. Please set it and re-run"
else

  export TT_TORCH_HOME="$(pwd)"
  export LD_LIBRARY_PATH=$TT_TORCH_HOME/env/venv/lib/python3.11/site-packages/torch/lib:$TTMLIR_TOOLCHAIN_DIR/lib:$LD_LIBRRARY_PATH

  export TTMLIR_VENV_DIR="$(pwd)/env/venv"
  if [ -d $TTMLIR_VENV_DIR/bin ]; then
    [ -f $TTMLIR_VENV_DIR/bin/activate ] && source $TTMLIR_VENV_DIR/bin/activate
  else
    echo "Creating virtual environment in $TTMLIR_VENV_DIR"
    apt install python3.11-dev -y
    apt install python3.11-venv -y
    python3.11 -m venv $TTMLIR_VENV_DIR
    source $TTMLIR_VENV_DIR/bin/activate
    pip install --upgrade pip

    python3.11 -m pip install -r requirements.txt
    cd $TT_TORCH_HOME/third_party
    git clone https://github.com/pytorch/vision.git
    cd vision
    git checkout v0.20.0
    pip uninstall -y torchvision
    TORCHVISION_USE_VIDEO_CODEC=0 TORCHVISION_USE_FFMPEG=0 CC=clang CXX=clang++ _GLIBCXX_USE_CXX11_ABI=1 USE_CUDA=OFF python setup.py install
    cd $TT_TORCH_HOME
  fi
  export TTTORCH_ENV_ACTIVATED=1
  export TTMLIR_ENV_ACTIVATED=1
  export PATH=$TT_TORCH_HOME/third_party/tt-mlir/src/tt-mlir-build/bin:$TTMLIR_TOOLCHAIN_DIR/bin:$PATH
  export TOKENIZERS_PARALLELISM=false
  if [ -n "$PROJECT_ROOT" ]; then
      export TT_METAL_HOME="$PROJECT_ROOT/third_party/tt-mlir/src/tt-mlir/third_party/tt-metal/src/tt-metal"
  else
      export TT_METAL_HOME="$(pwd)/third_party/tt-mlir/src/tt-mlir/third_party/tt-metal/src/tt-metal"
  fi
  export PYTHONPATH="$(pwd):$(pwd)/install/lib:$(pwd)/.local/toolchain/python_packages/mlir_core:${TT_METAL_HOME}:${TT_METAL_HOME}/tt_eager:${TT_METAL_BUILD_HOME}/tools/profiler/bin"
  export ARCH_NAME="${ARCH_NAME:-wormhole_b0}"
  export TT_METAL_LOGGER_LEVEL="ERROR"

fi
