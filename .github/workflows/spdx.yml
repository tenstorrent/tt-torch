name: spdx

on:
  workflow_dispatch:
  workflow_call:


# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - id: set-matrix
#         run: echo "matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}" >> $GITHUB_OUTPUT
#   job2:
#     needs: job1
#     runs-on: ubuntu-latest
#     strategy:
#       matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
#     steps:
#       - run: echo "Matrix - Project ${{ matrix.project }}, Config ${{ matrix.config }}"


jobs:
  job0:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set matrix
        id: set-matrix
        run: echo "matrix=$(cat benchmark_test_matrix_splits.json)" >> $GITHUB_OUTPUT
  job1:
    runs-on: ubuntu-latest
    needs: job0
    strategy:
      matrix:
        group: ${{ fromJSON(needs.job0.outputs.matrix) }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - uses: enarx/spdx@master
      with:
        licenses: |-
          Apache-2.0
          MIT
    - name: dummy step
      id: dummy
      run: |
          echo "My group is ${{ matrix.group.runs-on }} with index ${{ matrix.group.group-id }}"
