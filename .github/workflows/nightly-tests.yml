# This workflow automates running model tests.

name: Nightly Tests

on:
  schedule:
    - cron: '0 4 * * *'  # Runs at 04:00 UTC every day
  workflow_dispatch:  # Manual trigger


jobs:
  pre-commit:
    uses: ./.github/workflows/pre-commit.yml
    secrets: inherit
  spdx:
    uses: ./.github/workflows/spdx.yml
    secrets: inherit
  docker-build:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit
  # build:
  #   needs: [pre-commit, spdx, docker-build]
  #   uses: ./.github/workflows/run-build.yml
  #   secrets: inherit
  #   with:
  #     docker-image: ${{ needs.docker-build.outputs.docker-image }}
  # test_op_by_op:
  #   needs: [docker-build, build]
  #   uses: ./.github/workflows/run-op-by-op-model-tests-nightly.yml
  #   secrets: inherit
  #   with:
  #     docker-image: ${{ needs.docker-build.outputs.docker-image }}
  # test_e2e:
  #   needs: [docker-build, build]
  #   uses: ./.github/workflows/run-e2e-tests.yml
  #   secrets: inherit
  #   with:
  #     docker-image: ${{ needs.docker-build.outputs.docker-image }}
  # test_full_model:
  #   needs: [docker-build, build]
  #   uses: ./.github/workflows/run-full-model-execution-tests.yml
  #   secrets: inherit
  #   with:
  #     docker-image: ${{ needs.docker-build.outputs.docker-image }}
  # test_full_model_nightly:
  #   needs: [docker-build, build]
  #   uses: ./.github/workflows/run-full-model-execution-tests-nightly.yml
  #   secrets: inherit
  #   with:
  #     docker-image: ${{ needs.docker-build.outputs.docker-image }}

  test_board_reset:
    needs: [docker-build]
    runs-on: wormhole_b0
    container:
      image: ${{ needs.docker-build.outputs.docker-image }}
    steps:
    - name: Test board reset functionality
      shell: bash
      run: |
        # First check the PATH to see what's available
        echo "System PATH:"
        echo $PATH

        # Search for tt-smi-metal binary in common locations
        echo "Searching for tt-smi-metal in common locations:"
        echo "In /usr:"
        find /usr -name "tt-smi*" 2>/dev/null || echo "No tt-smi* in /usr"
        echo "In /opt:"
        find /opt -name "tt-smi*" 2>/dev/null || echo "No tt-smi* in /opt"

        # Show current directory contents
        echo "Current directory contents:"
        ls -la

        # Check if env directory exists
        echo "Checking for environment directory:"
        ls -la env/ || echo "No env directory found"

        # Activate Python environment
        echo "Activating Python environment:"
        source env/activate && echo "Environment activated" || echo "Failed to activate environment"

        # Check Python version after activation
        echo "Python version after activation:"
        python --version || echo "Python not found after activation"

        # Run the script directly with verbose mode
        echo "Running board_reset.py script directly:"
        python tt_torch/utils/board_reset.py --verbose

  # download-report:
  #   if: success() || failure()
  #   needs: test_op_by_op
  #   uses: ./.github/workflows/generate-model-report.yml
  #   secrets: inherit
  # generate-ttnn-md:
  #   if: success() || failure()
  #   needs: [download-report]
  #   uses: ./.github/workflows/generate-ttnn-md.yml
  #   secrets: inherit
  #   with:
  #     spreadsheet_name: ${{ needs.download-report.outputs.spreadsheet_name }}
