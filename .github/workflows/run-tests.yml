name: Run Tests

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      docker-image:
        description: 'Docker image to use for build'
        required: true
        type: string
  workflow_run:
    workflows: [Build]
    types: [completed]

env:
  # Model files accessed via get_file() are cached here.
  DOCKER_CACHE_ROOT: /mnt/dockercache

permissions:
  packages: write
  checks: write

jobs:
  tests:
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        build: [
          {runs-on: torch-p150-4, name: "run", container-options: "--device /dev/tenstorrent/0"},
        ]
    name: tests (${{ matrix.build.runs-on }}, ${{ matrix.build.name }})
    runs-on:
      - ${{ matrix.build.runs-on }}
    container:
      image: ${{ inputs.docker-image }}
      options: --user root ${{ matrix.build.container-options }} --shm-size=2gb
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env
        - /mnt/dockercache:/mnt/dockercache

    steps:
    - uses: actions/checkout@v4

    - name: Fetch job id
      id: fetch-job-id
      uses: tenstorrent/tt-github-actions/.github/actions/job_id@main
      with:
        job_name: "tests (${{ matrix.build.runs-on }}, ${{ matrix.build.name }})"

    - name: Set reusable strings
      id: strings
      shell: bash
      env:
        JOB_ID: ${{ steps.fetch-job-id.outputs.job_id }}
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "install-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"
        echo "dist-dir=$(pwd)/dist" >> "$GITHUB_OUTPUT"
        echo "job-id=$JOB_ID" >> "$GITHUB_OUTPUT"
        echo "test_report_path_torch=report_torch_$JOB_ID.xml" >> "$GITHUB_OUTPUT"
        echo "test_report_path_models=report_models_$JOB_ID.xml" >> "$GITHUB_OUTPUT"
        echo "test_report_path_onnx=report_onnx_$JOB_ID.xml" >> "$GITHUB_OUTPUT"

    - name: Git safe dir
      run: git config --global --add safe.directory ${{ steps.strings.outputs.work-dir }}

    - name: Use build artifacts (loop 1)
      uses: tenstorrent/tt-forge/.github/actions/download-artifact@main
      with:
        name: install-artifacts
        path: install-1

    - name: Check SHA256 and reupload (loop 1)
      shell: bash
      run: |
        echo "=== Loop 1 ==="
        find install-1 -type f -exec sha256sum {} \; | sort
        tar -czf install-artifacts-1.tar.gz -C install-1 .
        sha256sum install-artifacts-1.tar.gz

    - name: Upload artifacts (loop 1)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-loop-1
        path: install-artifacts-1.tar.gz
        retention-days: 5


    - name: Use build artifacts (loop 2)
      uses: tenstorrent/tt-forge/.github/actions/download-artifact@main
      with:
        name: install-artifacts
        path: install-2

    - name: Check SHA256 and reupload (loop 2)
      shell: bash
      run: |
        echo "=== Loop 2 ==="
        find install-2 -type f -exec sha256sum {} \; | sort
        tar -czf install-artifacts-2.tar.gz -C install-2 .
        sha256sum install-artifacts-2.tar.gz

    - name: Upload artifacts (loop 2)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-loop-2
        path: install-artifacts-2.tar.gz
        retention-days: 5


    - name: Use build artifacts (loop 3)
      uses: tenstorrent/tt-forge/.github/actions/download-artifact@main
      with:
        name: install-artifacts
        path: install-3

    - name: Check SHA256 and reupload (loop 3)
      shell: bash
      run: |
        echo "=== Loop 3 ==="
        find install-3 -type f -exec sha256sum {} \; | sort
        tar -czf install-artifacts-3.tar.gz -C install-3 .
        sha256sum install-artifacts-3.tar.gz

    - name: Upload artifacts (loop 3)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-loop-3
        path: install-artifacts-3.tar.gz
        retention-days: 5

    - name: Use build artifacts (loop 4)
      uses: tenstorrent/tt-forge/.github/actions/download-artifact@main
      with:
        name: install-artifacts
        path: install-4

    - name: Check SHA256 and reupload (loop 4)
      shell: bash
      run: |
        echo "=== Loop 4 ==="
        find install-4 -type f -exec sha256sum {} \; | sort
        tar -czf install-artifacts-4.tar.gz -C install-4 .
        sha256sum install-artifacts-4.tar.gz

    - name: Upload artifacts (loop 4)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-loop-4
        path: install-artifacts-4.tar.gz
        retention-days: 5


    - name: Use build artifacts (loop 5)
      uses: tenstorrent/tt-forge/.github/actions/download-artifact@main
      with:
        name: install-artifacts
        path: install-5

    - name: Check SHA256 and reupload (loop 5)
      shell: bash
      run: |
        echo "=== Loop 5 ==="
        find install-5 -type f -exec sha256sum {} \; | sort
        tar -czf install-artifacts-5.tar.gz -C install-5 .
        sha256sum install-artifacts-5.tar.gz

    - name: Upload artifacts (loop 5)
      uses: actions/upload-artifact@v4
      with:
        name: artifact-loop-5
        path: install-artifacts-5.tar.gz
        retention-days: 5


    - name: Use final build artifacts for install
      shell: bash
      run: |
        # Use the last downloaded artifacts for the install step
        cp -r install-5 install

    - name: install tt-torch
      shell: bash
      run: |
        source env/activate
        mkdir -p ${{ steps.strings.outputs.dist-dir }}
        mv install/wheels/* ${{ steps.strings.outputs.dist-dir }}
        pip install ${{ steps.strings.outputs.dist-dir }}/*.whl

    - name: Show actual installed python dependencies
      shell: bash
      run: |
        source env/activate
        pip freeze

    - name: Verify CI model test matrices
      shell: bash
      run: |
        source env/activate
        python tt_torch/tools/ci_verification.py --scan-workflows

    - name: Run PyTorch Unit tests
      shell: bash
      run: |
        source env/activate
        pytest -v tests/torch \
           --ignore=tests/torch/test_basic_multichip.py \
           --junit-xml=${{ steps.strings.outputs.test_report_path_torch }} \
           --cov=tt_torch --cov-report term --cov-report xml:coverage.xml

    - name: Upload Test Report Torch
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-reports-torch-${{ matrix.build.runs-on }}-${{ matrix.build.name }}-${{ steps.fetch-job-id.outputs.job_id }}
        path: ${{ steps.strings.outputs.test_report_path_torch }}

    - name: Run ONNX Unit tests
      shell: bash
      run: |
        source env/activate
        pytest -v tests/onnx \
            --junit-xml=${{ steps.strings.outputs.test_report_path_onnx }} \
            --cov=tt_torch --cov-report term --cov-report xml:coverage.xml --cov-append

    - name: Upload Test Report Onnx
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-reports-onnx-${{ matrix.build.runs-on }}-${{ matrix.build.name }}-${{ steps.fetch-job-id.outputs.job_id }}
        path: ${{ steps.strings.outputs.test_report_path_onnx }}

    - name: Check All Ops Execute
      shell: bash
      run: |
        source env/activate
        TT_TORCH_CHECK_ALL_OPS_EXECUTE=1 pytest -svv tests/models/MobileNetV2/test_MobileNetV2.py tests/models/mnist/test_mnist.py --op_by_op_torch

    - name: Stablehlo Op-By-Op Test
      shell: bash
      run: |
        source env/activate
        pytest -svv tests/models/mnist/test_mnist.py --op_by_op_stablehlo

    - name: Run Resnet demo
      shell: bash
      run: |
        source env/activate
        python demos/resnet/resnet50_demo.py

    - name: Show Test Report
      continue-on-error: true
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        token: ${{ secrets.GH_TOKEN }}
        report_paths: ${{ steps.strings.outputs.test_report_path_torch }}
        check_name: TT-Torch Tests
        comment: true
        updateComment: false
        detailed_summary: true
        group_suite: true

    - name: Upload coverage reports to Codecov
      if: success() || failure()
      continue-on-error: true
      uses: codecov/codecov-action@v5
      with:
        files: coverage.info,.coverage,coverage.xml
        # disable_search: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: success() || failure()
      continue-on-error: true
      uses: codecov/test-results-action@v1
      with:
        files: ${{ steps.strings.outputs.test_report_path_torch }}, ${{ steps.strings.outputs.test_report_path_onnx }}
        disable_search: true
        token: ${{ secrets.CODECOV_TOKEN }}
