name: Run Model Compile Depth Benchmark Tests

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      docker-image:
        description: 'Docker image to use for build'
        required: true
        type: string
  workflow_run:
    workflows: [Build] # backref to run-build as dependency
    types: [completed]
jobs:
  tests:
    timeout-minutes: 600
    strategy:
      fail-fast: false
      matrix:
        build: [
          {runs-on: 'wormhole_b0', name: 'benchmark_1', tests: ['tests/models/MobileNetV2/test_MobileNetV2.py::test_MobileNetV2[full-eval]', 'tests/models/MobileNetV2/test_MobileNetV2_onnx.py::test_MobileNetV2[full-eval]', 'tests/models/Qwen/test_qwen2_casual_lm.py::test_qwen2_casual_lm[full-Qwen/Qwen2.5-1.5B-eval]', 'tests/models/Qwen/test_qwen2_token_classification.py::test_qwen2_token_classification[full-Qwen/Qwen2-7B-eval]', 'tests/models/RMBG/test_RMBG.py::test_RMBG[full-eval]', 'tests/models/albert/test_albert_masked_lm.py::test_albert_masked_lm[full-albert/albert-base-v2-eval]', 'tests/models/albert/test_albert_masked_lm.py::test_albert_masked_lm[full-albert/albert-large-v2-eval]', 'tests/models/albert/test_albert_masked_lm.py::test_albert_masked_lm[full-albert/albert-xlarge-v2-eval]', 'tests/models/albert/test_albert_masked_lm.py::test_albert_masked_lm[full-albert/albert-xxlarge-v2-eval]', 'tests/models/albert/test_albert_question_answering.py::test_albert_question_answering[full-twmkn9/albert-base-v2-squad2-eval]', 'tests/models/albert/test_albert_sequence_classification.py::test_albert_sequence_classification[full-textattack/albert-base-v2-imdb-eval]', 'tests/models/albert/test_albert_token_classification.py::test_albert_token_classification[full-albert/albert-base-v2-eval]', 'tests/models/autoencoder_conv/test_autoencoder_conv.py::test_autoencoder_conv[full-eval]', 'tests/models/autoencoder_conv/test_autoencoder_conv_v2.py::test_autoencoder_conv_v2[full-eval]', 'tests/models/autoencoder_linear/test_autoencoder_linear.py::test_autoencoder_linear[full-eval]', 'tests/models/beit/test_beit_image_classification.py::test_beit_image_classification[full-microsoft/beit-base-patch16-224-eval]', 'tests/models/beit/test_beit_image_classification.py::test_beit_image_classification[full-microsoft/beit-large-patch16-224-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_2', tests: ['tests/models/bert/test_bert.py::test_bert[full-eval]', 'tests/models/bloom/test_bloom.py::test_bloom[full-eval]', 'tests/models/clip/test_clip.py::test_clip[full-eval]', 'tests/models/codegen/test_codegen.py::test_codegen[full-eval]', 'tests/models/deepseek/test_deepseek_qwen.py::test_deepseek_qwen[full-deepseek-ai/DeepSeek-R1-Distill-Qwen-32B-eval]', 'tests/models/deit/test_deit.py::test_deit[full-facebook/deit-base-patch16-224-eval]', 'tests/models/detr/test_detr.py::test_detr[full-eval]', 'tests/models/distilbert/test_distilbert.py::test_distilbert[full-distilbert-base-uncased-eval]', 'tests/models/distilbert/test_distilbert.py::test_distilbert_multiloop[full-distilbert-base-uncased-eval-64]', 'tests/models/dpr/test_dpr.py::test_dpr[full-eval]', 'tests/models/falcon/test_falcon.py::test_falcon[full-eval]', 'tests/models/flan_t5/test_flan_t5.py::test_flan_t5[full-eval]', 'tests/models/glpn_kitti/test_glpn_kitti.py::test_glpn_kitti[full-eval]', 'tests/models/gpt2/test_gpt2.py::test_gpt2[full-eval]', 'tests/models/gpt_neo/test_gpt_neo.py::test_gpt_neo[full-eval]', 'tests/models/hand_landmark/test_hand_landmark.py::test_hand_landmark[full-eval]', 'tests/models/hardnet/test_hardnet.py::test_hardnet[full-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_3a', tests: ['tests/models/llama/test_llama_3b.py::test_llama_3b[full-meta-llama/Llama-3.2-3B-eval]', 'tests/models/llama/test_llama_7b.py::test_llama_7b[full-eval]', 'tests/models/mamba/test_mamba.py::test_mamba[full-state-spaces/mamba-370m-hf-eval]', 'tests/models/mgp-str-base/test_mgp_str_base.py::test_mgp_str_base[full-eval]', 'tests/models/mlpmixer/test_mlpmixer.py::test_mlpmixer[full-eval]', 'tests/models/mnist/test_mnist.py::test_mnist_train[full-eval]', 'tests/models/mobilenet_ssd/test_mobilenet_ssd.py::test_mobilenet_ssd[full-eval]','tests/models/openpose/test_openpose.py::test_openpose[full-eval]', 'tests/models/openpose/test_openpose_v2.py::test_openpose_v2[full-eval]', 'tests/models/opt/test_opt.py::test_opt[full-eval]', 'tests/models/perceiver_io/test_perceiver_io.py::test_perceiver_io[full-eval]', 'tests/models/resnet/test_resnet.py::test_resnet[full-eval]', 'tests/models/resnet50/test_resnet50.py::test_resnet[full-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_3b', tests: [ 'tests/models/mamba/test_mamba.py::test_mamba[full-state-spaces/mamba-790m-hf-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_3c', tests: ['tests/models/mamba/test_mamba.py::test_mamba[full-state-spaces/mamba-2.8b-hf-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_3d', tests: ['tests/models/mamba/test_mamba.py::test_mamba[full-state-spaces/mamba-1.4b-hf-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_4', tests: ['tests/models/roberta/test_roberta.py::test_roberta[full-eval]', 'tests/models/segformer/test_segformer.py::test_segformer[full-eval]', 'tests/models/segment_anything/test_segment_anything.py::test_segment_anything[full-eval]', 'tests/models/speecht5_tts/test_speecht5_tts.py::test_speecht5_tts[full-eval]', 'tests/models/squeeze_bert/test_squeeze_bert.py::test_squeeze_bert[full-eval]', 'tests/models/stable_diffusion/test_stable_diffusion.py::test_stable_diffusion[full-eval]', 'tests/models/stable_diffusion/test_stable_diffusion_unet.py::test_stable_diffusion_unet[full-eval]', 'tests/models/t5/test_t5.py::test_t5[full-t5-small-eval]', 'tests/models/t5/test_t5.py::test_t5[full-t5-base-eval]', 'tests/models/t5/test_t5.py::test_t5[full-t5-large-eval]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-tf_efficientnet_lite0.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-tf_efficientnet_lite1.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-tf_efficientnet_lite2.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-tf_efficientnet_lite3.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-tf_efficientnet_lite4.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-ghostnet_100.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-ghostnetv2_100.in1k]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_5', tests: ['tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-inception_v4.tf_in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-mixer_b16_224.goog_in21k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-mobilenetv1_100.ra4_e3600_r224_in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-ese_vovnet19b_dw.ra_in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-xception71.tf_in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-dla34.in1k]', 'tests/models/timm/test_timm_image_classification.py::test_timm_image_classification[full-eval-hrnet_w18.ms_aug_in1k]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-googlenet]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-densenet121]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-densenet161]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-densenet169]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-densenet201]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-mobilenet_v2]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-mobilenet_v3_small]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-mobilenet_v3_large]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnet18]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnet34]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_6', tests: ['tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnet50]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnet101]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnet152]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnext50_32x4d]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnext101_32x8d]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-resnext101_64x4d]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg11]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg11_bn]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg13]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg13_bn]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg16]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg16_bn]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg19]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vgg19_bn]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vit_b_16]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vit_b_32]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vit_l_16]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_7', tests: ['tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vit_l_32]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-vit_h_14]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-wide_resnet50_2]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-wide_resnet101_2]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_400mf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_800mf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_1_6gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_3_2gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_8gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_16gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_32gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_y_128gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_400mf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_800mf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_1_6gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_3_2gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_8gf]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_8', tests: ['tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_16gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-regnet_x_32gf]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_t]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_s]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_b]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_v2_t]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_v2_s]', 'tests/models/torchvision/test_torchvision_image_classification.py::test_torchvision_image_classification[full-eval-swin_v2_b]', 'tests/models/torchvision/test_torchvision_object_detection.py::test_torchvision_object_detection[full-ssd300_vgg16-eval]', 'tests/models/torchvision/test_torchvision_object_detection.py::test_torchvision_object_detection[full-ssdlite320_mobilenet_v3_large-eval]', 'tests/models/torchvision/test_torchvision_object_detection.py::test_torchvision_object_detection[full-retinanet_resnet50_fpn-eval]', 'tests/models/torchvision/test_torchvision_object_detection.py::test_torchvision_object_detection[full-retinanet_resnet50_fpn_v2-eval]', 'tests/models/unet/test_unet.py::test_unet[full-eval]', 'tests/models/unet_brain/test_unet_brain.py::test_unet_brain[full-eval]', 'tests/models/unet_carvana/test_unet_carvana.py::test_unet_carvana[full-eval]', 'tests/models/vilt/test_vilt.py::test_vilt[full-eval]', 'tests/models/whisper/test_whisper.py::test_whisper[full-eval]']},
          {runs-on: 'wormhole_b0', name: 'benchmark_9', tests: ['tests/models/xglm/test_xglm.py::test_xglm[full-eval]', 'tests/models/yolos/test_yolos.py::test_yolos[full-eval]', 'tests/models/yolov3/test_yolov3.py::test_yolov3[full-eval]', 'tests/models/yolov4/test_yolov4.py::test_yolov4[full-eval]', 'tests/models/yolov5/test_yolov5.py::test_yolov5[full-eval]']},
        ]
    runs-on:
      - ${{ matrix.build.runs-on }}

    name: "test benchmark (${{ matrix.build.runs-on }}, ${{ matrix.build.name }})"

    container:
      image: ${{ inputs.docker-image }}
      options: --user root --device /dev/tenstorrent/0 --shm-size=4gb
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env
        - /mnt/dockercache:/mnt/dockercache
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true

    - name: Fetch job id
      id: fetch-job-id
      uses: tenstorrent/tt-github-actions/.github/actions/job_id@main
      with:
        job_name: "test benchmark (${{ matrix.build.runs-on }}, ${{ matrix.build.name }})" # reference above tests.name

    - name: Set reusable strings
      id: strings
      shell: bash
      env:
        JOB_ID: ${{ steps.fetch-job-id.outputs.job_id }}

      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "install-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"
        echo "dist-dir=$(pwd)/dist" >> "$GITHUB_OUTPUT"
        echo "test_report_path_models=report_models_$JOB_ID.xml" >> "$GITHUB_OUTPUT"
    - name: Use build artifacts
      uses: actions/download-artifact@v4
      with:
        name: install-artifacts
        path: ${{ steps.strings.outputs.install-dir }}

    - name: 'Untar install directory'
      shell: bash
      working-directory: ${{ steps.strings.outputs.install-dir }}
      run: |
        tar xvf artifact.tar
        mkdir -p ${{ steps.strings.outputs.dist-dir }}
        mv wheels/* ${{ steps.strings.outputs.dist-dir }}

    - name: install tt-torch
      shell: bash
      run: |
        source env/activate
        pip install ${{ steps.strings.outputs.dist-dir }}/*.whl

    - name: Run Execution Benchmark Tests
      env:
        HF_HOME: /mnt/dockercache/huggingface
        TORCH_HOME: /mnt/dockercache/torch
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      shell: bash
      run: |
        source env/activate
        apt-get update
        apt install -y libgl1 libglx-mesa0
        set +e
        mkdir -p ${{ steps.strings.outputs.work-dir }}/pytest-logs
        counter=0
        total_tests=$(echo '${{ toJSON(matrix.build.tests) }}' | jq -r '.[]' | wc -l)
        for test in $(echo '${{ toJSON(matrix.build.tests) }}' | jq -r '.[]'); do
            counter=$((counter + 1))
            test_name=$(echo "$test" | sed 's/[^a-zA-Z0-9]/_/g')  # Sanitize test name for filename
            echo "========================================"
            echo "Running test $counter of $total_tests: $test_name"
            echo "========================================"

            pytest -svv "$test" \
                --junit-xml=${{ steps.strings.outputs.test_report_path_models }}_subtest_${test_name}.xml \
                --crashsafe | tee ${{ steps.strings.outputs.work-dir }}/pytest-logs/${test_name}.log

            echo "Wrote junitxml report ${{ steps.strings.outputs.test_report_path_models }}_subtest_${test_name}.xml"
            echo "wrote log ${{ steps.strings.outputs.work-dir }}/pytest-logs/${test_name}.log"
        done
        set -e
        exit 0 # force successful exit

    - name: Upload Pytest Logs
      uses: actions/upload-artifact@v4
      with:
        name: pytest-logs-${{ matrix.build.runs-on }}-${{ matrix.build.name }}
        path: ${{ steps.strings.outputs.work-dir }}/pytest-logs

    - name: Postprocess and Fuse Test Reports
      shell: bash
      run: |
        source env/activate
        python tt_torch/tools/postprocess_crashsafe_reports.py "${{ steps.strings.outputs.test_report_path_models }}_subtest*_crashsafe.xml" "${{ steps.strings.outputs.test_report_path_models }}"

    - name: Upload Test Report Models
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-reports-models-benchmark-${{ matrix.build.runs-on }}-${{ matrix.build.name }}-${{ steps.fetch-job-id.outputs.job_id }}
        path: ${{ steps.strings.outputs.test_report_path_models }}
