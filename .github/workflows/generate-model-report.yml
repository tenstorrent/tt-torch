name: Generate Model Reports

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      spreadsheet_name:
        description: "Name of the spreadsheet generated by the tests"
        value: ${{ jobs.tests.outputs.spreadsheet_name }} # Expose job output as workflow output
  workflow_run:
    workflows: [Build]
    types: [completed]

jobs:
  tests:
    outputs:
      spreadsheet_name: ${{ steps.git-info.outputs.spreadsheet_name }}
    timeout-minutes: 120
    strategy:
      fail-fast: false

    runs-on:
      - wormhole_b0

    container:
      image: ghcr.io/tenstorrent/tt-torch/tt-torch-ci-ubuntu-22-04:latest
      options: --user root --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "install-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"
        echo "dist-dir=$(pwd)/dist" >> "$GITHUB_OUTPUT"
        echo "test-output-dir=$(pwd)/results/models/tests/" >> "$GITHUB_OUTPUT"

    - name: Git safe dir
      run: git config --global --add safe.directory ${{ steps.strings.outputs.work-dir }}

    - name: Use build artifacts
      uses: actions/download-artifact@v4
      with:
        name: install-artifacts
        path: ${{ steps.strings.outputs.install-dir }}

    - name: 'Untar install directory'
      shell: bash
      working-directory: ${{ steps.strings.outputs.install-dir }}
      run: |
        tar xvf artifact.tar
        mkdir -p ${{ steps.strings.outputs.dist-dir }}
        mv wheels/* ${{ steps.strings.outputs.dist-dir }}

    - name: install tt-torch
      shell: bash
      run: |
        source env/activate
        pip install ${{ steps.strings.outputs.dist-dir }}/*.whl

    - name: make tests directory
      shell: bash
      working-directory: ${{ steps.strings.outputs.work-dir }}
      run: mkdir -p ${{ steps.strings.outputs.work-dir }}/results/models/tests/

    - name: Use build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ${{ steps.strings.outputs.test-output-dir }}
        merge-multiple: true

    - name: Untar tests
      shell: bash
      working-directory: ${{ steps.strings.outputs.test-output-dir }}
      run: |
        rm artifact.tar
        for a in `ls -1 *.tar`; do tar -xvf $a; rm $a; done

    - name: Display structure of downloaded dir
      working-directory: ${{ steps.strings.outputs.test-output-dir }}
      run: |
        ls -R ${{ steps.strings.outputs.test-output-dir }}

    - name: Parse Tests
      shell: bash
      working-directory: ${{ steps.strings.outputs.work-dir }}
      run: |
        source env/activate
        python results/parse_op_by_op_results.py

    - name: Get git metadata and set artifact name
      id: git-info
      shell: bash
      run: |
        branch=$(git rev-parse --abbrev-ref HEAD | sed 's/[":<>|*?\\\/]/_/g' | tr -d '\r\n')
        commit=$(git rev-parse --short HEAD)
        date=$(date +'%Y-%m-%d')
        echo "branch=$branch" >> "$GITHUB_OUTPUT"
        echo "commit=$commit" >> "$GITHUB_OUTPUT"
        echo "date=$date" >> "$GITHUB_OUTPUT"
        spreadsheet_name="models_op_per_op_${date}_${branch}_${commit}.xlsx"
        echo "spreadsheet_name=$spreadsheet_name" >> "$GITHUB_OUTPUT"
        echo "Renaming spreadsheet from ${{ steps.strings.outputs.work-dir }}/results/models_op_per_op.xlsx to ${{ steps.strings.outputs.work-dir }}/results/$spreadsheet_name"
        mv ${{ steps.strings.outputs.work-dir }}/results/models_op_per_op.xlsx ${{ steps.strings.outputs.work-dir }}/results/$spreadsheet_name

    - name: Upload report to archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.git-info.outputs.spreadsheet_name }}
        path: "${{ steps.strings.outputs.work-dir }}/results/${{ steps.git-info.outputs.spreadsheet_name }}"
