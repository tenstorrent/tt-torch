name: Generate Benchmark Test Matrix Dynamically

on:
  workflow_call:
    outputs:
        matrix-json-splits:
            description: "Test splits JSON string, to be dereferenced in consuming job with fromJSON call to generate a test matrix"
            value: ${{ jobs.tests.outputs.matrix-json-splits }}
  workflow_dispatch:
  workflow_run:
    workflows: [Build]
    types: [completed]

jobs:
  tests:
    outputs:
       matrix-json-splits: ${{ steps.generate_matrix.outputs.matrix-json-splits }}

    timeout-minutes: 10
    strategy:
      fail-fast: false

    runs-on:
      - wormhole_b0

    container:
      image: ghcr.io/tenstorrent/tt-torch/tt-torch-ci-ubuntu-22-04:latest
      options: --user root --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        lfs: true

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "install-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"
        echo "dist-dir=$(pwd)/dist" >> "$GITHUB_OUTPUT"
        echo "test-output-dir=$(pwd)/results/models/tests/" >> "$GITHUB_OUTPUT"

    - name: Git safe dir
      run: git config --global --add safe.directory ${{ steps.strings.outputs.work-dir }}

    - name: Use build artifacts
      uses: actions/download-artifact@v4
      with:
        name: install-artifacts
        path: ${{ steps.strings.outputs.install-dir }}

    - name: 'Untar install directory'
      shell: bash
      working-directory: ${{ steps.strings.outputs.install-dir }}
      run: |
        tar xvf artifact.tar
        mkdir -p ${{ steps.strings.outputs.dist-dir }}
        mv wheels/* ${{ steps.strings.outputs.dist-dir }}

    - name: install tt-torch
      shell: bash
      run: |
        source env/activate
        pip install ${{ steps.strings.outputs.dist-dir }}/*.whl

    - name: Generate test matrix
      id: generate_matrix
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }} # needed to download artifacts
      working-directory: ${{ steps.strings.outputs.work-dir }}
      run: |
        source env/activate

        apt install -y libgl1 libglx-mesa0

        python tt_torch/tools/benchmark_promotion.py --gen-matrix

        # hardcoded filename to avoid cluttering cliargs for benchmark promotion

        # Ensure the file exists
        if [ ! -f "benchmark_test_matrix.json" ]; then
        echo "Error: benchmark_test_matrix.json not found!"
        exit 1
        fi

        # Use the absolute path to avoid ambiguity
        matrix_json_path=$(realpath benchmark_test_matrix.json)
        echo "matrix-json-path=$matrix_json_path" >> "$GITHUB_OUTPUT"

        # pass splits matrix as string directly
        echo "matrix-json-splits=$(cat benchmark_test_matrix_splits.json)" >> $GITHUB_OUTPUT

    - name: Upload Benchmark Test Matrix
      uses: actions/upload-artifact@v4
      with:
        # hardcoded artifact name for the test matrix JSON
        name: benchmark-test-matrix-json
        path: ${{ steps.generate_matrix.outputs.matrix-json-path }}
